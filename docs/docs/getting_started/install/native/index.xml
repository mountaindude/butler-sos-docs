<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Butler SOS â€“ Native app</title>
    <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/</link>
    <description>Recent content in Native app on Butler SOS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Windows</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/windows/</guid>
      <description>
        
        
        &lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;There are two options: Run Butler SOS as a standalone binary or as a Node.js app.
The first is by far easier to set up and maintain and thus recommended.&lt;/p&gt;
&lt;h3 id=&#34;using-the-pre-built-standalone-app&#34;&gt;Using the pre-built, standalone app&lt;/h3&gt;
&lt;p&gt;The pre-build binaries are available from the &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the Windows binary&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Unblock&amp;rdquo; the downloaded zip file
&lt;ol&gt;
&lt;li&gt;Right-click the zip file&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;properties&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Mark the &amp;ldquo;Unblock&amp;rdquo; check box in the lower right part of the properties window&lt;/li&gt;
&lt;li&gt;Click the &amp;ldquo;Apply&amp;rdquo; button, then &amp;ldquo;Ok&amp;rdquo; to close the properties window&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Unzip the zip file&lt;/li&gt;
&lt;li&gt;Move the extracted &lt;code&gt;butler-sos.exe&lt;/code&gt; file to desired location, for example &lt;code&gt;d:\tools\butler-sos&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://nssm.cc/download&#34;&gt;nssm&lt;/a&gt; or similar tool to install Butler SOS as a Windows service&lt;/li&gt;
&lt;/ol&gt;







&lt;div class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 410px&#34;&gt;
	&lt;img class=&#34;card-img-top&#34; src=&#34;https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/windows/unblock-butler-sos-windows-1_hu120b59aaec49bf3d577d7f8be27a0445_303493_400x0_resize_catmullrom_3.png&#34; width=&#34;400&#34; height=&#34;562&#34;&gt;
	
	&lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
		&lt;p class=&#34;card-text&#34;&gt;
Unblocking the Butler SOS zip file on Windows Server
&lt;/p&gt;
	&lt;/div&gt;
	
&lt;/div&gt;
&lt;h3 id=&#34;using-nodejs&#34;&gt;Using Node.js&lt;/h3&gt;
&lt;p&gt;In this scenario you will use the Butler SOS source code together with the standard Node.js runtime libraries.&lt;/p&gt;
&lt;p&gt;The result is the same as with the stand-alone binaries, you just have to do more of the work yourself.&lt;br&gt;
This is usually &lt;em&gt;not&lt;/em&gt; preferred, but if you want to add new features to (or modify existone ones) Butler SOS, this option is for you&lt;/p&gt;
&lt;h3 id=&#34;1-install-nodejs&#34;&gt;1. Install Node.js&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;latest LTS version&lt;/a&gt; is usually a good choice.&lt;/p&gt;
&lt;h3 id=&#34;2-select-a-directory-from-which-butler-sos-will-be-run&#34;&gt;2. Select a directory from which Butler SOS will be run&lt;/h3&gt;
&lt;p&gt;This can be pretty much anywhere, in this example d:\tools\butler-sos will be used.&lt;/p&gt;
&lt;h3 id=&#34;3-get-butler-sos&#34;&gt;3. Get Butler SOS&lt;/h3&gt;
&lt;p&gt;Get the desired &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/releases&#34;&gt;Butler SOS version&lt;/a&gt; and extract it into the directory above.&lt;/p&gt;
&lt;p&gt;Get the latest available version unless you have a &lt;em&gt;really&lt;/em&gt; good reason to use an older version.&lt;br&gt;
New features are added, bugs fixed and security updates are applied in each version - it&amp;rsquo;s simply a good idea to use the latest version.&lt;/p&gt;
&lt;p&gt;Do not just clone the Butler SOS repository as that will give you the latest development version, which may not yet be fully tested and packaged.&lt;br&gt;
The exception is of course if you want to contribute to Butler SOS development - then forking and cloning the repository is the right thing to do.&lt;/p&gt;
&lt;h3 id=&#34;4-install-nodejs-dependencies&#34;&gt;4. Install Node.js dependencies&lt;/h3&gt;
&lt;p&gt;From d:\tools\butler-sos\src, run &lt;code&gt;npm i&lt;/code&gt; to install the various Node.js modules used by Butler SOS. Depending on your server configuration you may get some warnings about (for example) Python not being installed, these can usually be ignored.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The configuration file is used the same way as when Butler SOS runs on Docker, with one exception:&lt;/p&gt;
&lt;p&gt;The path to the certificates used to authenticate with Sense must be specified in the config file. With Docker the certificate path is always the same, but with Windows you need to specify where the certificate files are located.&lt;/p&gt;
&lt;p&gt;For example, if the certificate files exported from Sense are stored in d:\secrets\sensecert, the config file would look like this when used on Windows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Certificates to use when querying Sense for healthcheck data. Get these from the Certificate Export in QMC.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cert&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;clientCert&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;d:\secrets\sensecert\client.pem&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;clientCertKey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;d:\secrets\sensecert\client_key.pem&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;clientCertCA&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;d:\secrets\sensecert\root.pem&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;stayin-alive&#34;&gt;Stayin&amp;rsquo; alive&lt;/h2&gt;
&lt;p&gt;A tool like Butler SOS should of course start automatically when the server it runs on is restarted. This can be achieved in at least a couple of ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;By far the best option is to turn Butler SOS into a Windows service. That way it will be started on server boot, restarted if it fails etc. There are various tools for doing this, with &lt;a href=&#34;https://nssm.cc/&#34;&gt;NSSM&lt;/a&gt; being a very, very good one. Butler SOS has been installed in lots of Sense clusters this way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also use a Node process monitor such as &lt;a href=&#34;http://pm2.keymetrics.io/&#34;&gt;PM2&lt;/a&gt; to monitor the Butler SOS process, and restart it if it for some reason crashes. PM2 is not entirely easy to use on Windows though.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Linux and Mac OS</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/linux_macos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/linux_macos/</guid>
      <description>
        
        
        &lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;There are two options: Run Butler SOS as a standalone binary or as a Node.js app.
The first is by far easier to set up and maintain and thus recommended.&lt;/p&gt;
&lt;h3 id=&#34;using-the-pre-built-standalone-app&#34;&gt;Using the pre-built, standalone app&lt;/h3&gt;
&lt;p&gt;The pre-build binaries are available from the &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the Linux/macOS binary&lt;/li&gt;
&lt;li&gt;Move the extracted &lt;code&gt;butler-sos&lt;/code&gt; file to desired location.&lt;/li&gt;
&lt;li&gt;Use the process monitor of choice (see below) to make sure Butler SOS is always running&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;using-nodejs&#34;&gt;Using Node.js&lt;/h3&gt;
&lt;p&gt;This scenario is identical to the &lt;a href=&#34;https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/windows/&#34;&gt;Windows scenario&lt;/a&gt;, please refer to that page for details. Keep in mind that the format of file systems paths differ between Windows and Linxu/Mac OS.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Once again, same thing as &lt;a href=&#34;https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/native/windows/&#34;&gt;on Windows&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;stayin-alive&#34;&gt;Stayin&amp;rsquo; alive&lt;/h2&gt;
&lt;p&gt;A Node process monitor can be used on Linux or Mac OS too.&lt;br&gt;
Tools like &lt;a href=&#34;http://pm2.keymetrics.io/&#34;&gt;PM2&lt;/a&gt; in fact usually work better on Linux/Mac OS than on Windows.&lt;/p&gt;
&lt;p&gt;You can probably also use Linux&amp;rsquo; standard service layer to start Butler SOS, that has not been tested though.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
