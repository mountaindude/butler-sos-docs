<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Butler SOS â€“ Reference docs</title>
    <link>https://butler-sos.ptarmiganlabs.com/docs/reference/</link>
    <description>Recent content in Reference docs on Butler SOS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://butler-sos.ptarmiganlabs.com/docs/reference/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Config file format</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/reference/config_file_format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/reference/config_file_format/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Either JSON or YAML notation can be used to create the configuration file, with file extensions of .json and .yaml/.yml, respectively.&lt;/p&gt;
&lt;p&gt;YAML is strongly recommended, as it is easier to edit/read/understand compared to JSON.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;The parameters in the config file are described below.
All parameters must be defined in the config file - run time errors are likely to occur otherwise.
The &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/blob/master/src/config/production_template.yaml&#34;&gt;sample config file&lt;/a&gt; looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./configfile1.png&#34; alt=&#34;Sample config file&#34; title=&#34;Sample Butler SOS config file&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;A few things to keep in mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Topic names (e.g. &amp;ldquo;Butler-SOS.logdb&amp;rdquo;) are case sensitive.&lt;/li&gt;
&lt;li&gt;First time Butler SOS is started, a new InfluxDB database will be created, together with a default InfluxDB retention policy.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logLevel&lt;/td&gt;
&lt;td&gt;The level of details in the logs. Possible values are silly, debug, verbose, info, warn, error (in order of decreasing level of detail).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fileLogging&lt;/td&gt;
&lt;td&gt;true/false to enable/disable logging to disk file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logDirectory&lt;/td&gt;
&lt;td&gt;Subdirectory where log files are stored&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;anonTelemetry&lt;/td&gt;
&lt;td&gt;Can Butler SOS send anonymous data about what computer it is running on? More info on whata data is collected &lt;a href=&#34;https://butler-sos.ptarmiganlabs.com/docs/about/telemetry/#where-is-telemetry-data-sent&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.heartbeat&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should heartbeats be sent to some URL, indicating that Butler SOS is alive and well? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remoteURL&lt;/td&gt;
&lt;td&gt;URL that will be called for heartbeats&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frequency&lt;/td&gt;
&lt;td&gt;How often should heartbeats be sent? Format according to &lt;a href=&#34;https://bunkat.github.io/later/parsers.html&#34;&gt;https://bunkat.github.io/later/parsers.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.dockerHealthCheck&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should a Docker healthcheck endpoint be created within Butler SOS? Set to false if &lt;em&gt;not&lt;/em&gt; running Butler SOS under Docker. true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;Port the healthcheck should use. Usually 12398, but might need be changed if seveal Butler instances run on the same server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.uptimeMonitor&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should messages with Butler SOS uptime and memory usage be written to console and logs? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frequency&lt;/td&gt;
&lt;td&gt;How often should uptime messages be written to console and/or logs? Format according to &lt;a href=&#34;https://bunkat.github.io/later/parsers.html&#34;&gt;https://bunkat.github.io/later/parsers.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logLevel&lt;/td&gt;
&lt;td&gt;Starting at what log level should uptime messages be used? Possible values are silly, debug, verbose, info, warn, error. For example, if you specify &amp;ldquo;verbose&amp;rdquo; here, uptime messages will appear if you set overall log level to silly, debug or verbose.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeInInfluxdb.&lt;br&gt;butlerSOSMemoryUsage&lt;/td&gt;
&lt;td&gt;Should data on Butler SOS&#39; own memory use be stored in Infludb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeInInfluxdb.&lt;br&gt;instanceTag&lt;/td&gt;
&lt;td&gt;Tag used to differentiate data from multiple Butler SOS instances. Useful if running different Butler SOS instances against (for example) DEV, TEST and PROD environments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.userEvents&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Shouls Butler SOS track detailed user events (i.e. session start/stop, connection open/close)? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;excludeUser&lt;/td&gt;
&lt;td&gt;Array of users (=directory/userId pairs) that should be disregarded when user events arrive from Sense.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;udpServerConfig.&lt;br&gt;serverHost&lt;/td&gt;
&lt;td&gt;IP/host where Butler SOS is running and the user event UDP server will run.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;udpServerConfig.&lt;br&gt;portUserActivityEvents&lt;/td&gt;
&lt;td&gt;Port on which the user event UDP server will listen.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;Array of tags (tagName/tagValue pairs) that should be added to each user event before sending it to InfluxDB.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.enable&lt;/td&gt;
&lt;td&gt;Should user events be sent to MQTT? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.topic&lt;/td&gt;
&lt;td&gt;MQTT topic which user event data will be posted to.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToInfluxdb.enable&lt;/td&gt;
&lt;td&gt;Should user events be saved in InfluxDB? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.logdb&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should Sense log db be queried for warnings/errors/info messages? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pollingInterval&lt;/td&gt;
&lt;td&gt;How often to query log db. Milliseconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;queryPeriod&lt;/td&gt;
&lt;td&gt;How far back should log db be queried? Human readable, e.g. &amp;ldquo;5 minutes&amp;rdquo; (which is also the default value)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;IP or FQDN of server where Sense log db is running&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;Port used by log db. 4432 unless changed during installation of Sense&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;qlogsReaderUser&lt;/td&gt;
&lt;td&gt;User to connect to log db as. &amp;ldquo;qlogs_reader&amp;rdquo; unless changed during installation of Sense&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;qlogsReaderPwd&lt;/td&gt;
&lt;td&gt;Password of above user&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extractErrors&lt;/td&gt;
&lt;td&gt;Should error entries be extracted from log db? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extractWarnings&lt;/td&gt;
&lt;td&gt;Should warning entries be extracted from log db? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extractInfo&lt;/td&gt;
&lt;td&gt;Should info entries be extracted from log db? true/false. &lt;br&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If info level logging is enabled, this will result in lots of messages being stored in Influxdb (at least for a busy Sense cluster).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.cert&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clientCert&lt;/td&gt;
&lt;td&gt;Certificate file. Exported from QMC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clientCertKey&lt;/td&gt;
&lt;td&gt;Certificate key file. Exported from QMC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clientCertCA&lt;/td&gt;
&lt;td&gt;Root certificate for above certificate files. Exported from QMC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clientCertPassphrase&lt;/td&gt;
&lt;td&gt;Password used to protect the certificate (as set when exporting cert from QMC)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.mqttConfig&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should health metrics be sent to MQTT? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brokerHost&lt;/td&gt;
&lt;td&gt;IP or FQDN of MQTT broker&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brokerPort&lt;/td&gt;
&lt;td&gt;Broker port&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;baseTopic&lt;/td&gt;
&lt;td&gt;The topic to which messages will be posted. Should end with /. For example butler-sos/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.influxdbConfig&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should health metrics be stored in Influxdb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hostIP&lt;/td&gt;
&lt;td&gt;IP or FQDN of Influxdb server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hostPort&lt;/td&gt;
&lt;td&gt;Port where Influxdb server is listening. Useful if Influxdb for some reason is not using its standard port of 8086&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth.enable&lt;/td&gt;
&lt;td&gt;Enable if data is to be stored in a password protected Influxdb database&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth.username&lt;/td&gt;
&lt;td&gt;Influxdb username&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth.password&lt;/td&gt;
&lt;td&gt;Influxdb password&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbName&lt;/td&gt;
&lt;td&gt;Database namne in Influxdb to which health metrics will be stored. Database will be created if it does not already exist when Butler SOS is started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;retentionPolicy.&lt;br&gt;name&lt;/td&gt;
&lt;td&gt;Name of default retention policy that will be created in InfluxDB database, when that database is created during first execution of Butler SOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;retentionPolicy.&lt;br&gt;duration&lt;/td&gt;
&lt;td&gt;Duration during which metrics are kept in InfluxDB. After the duration has passed, InfluxDB will purge all data older than duration from the database. See &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/query_language/database_management/#retention-policy-management&#34;&gt;InfluxDB docs&lt;/a&gt; for details on syntax.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;includeFields.&lt;br&gt;activeDocs&lt;/td&gt;
&lt;td&gt;Should a list of currently active Sense apps be stored in Influxdb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;includeFields.&lt;br&gt;loadedDocs&lt;/td&gt;
&lt;td&gt;Should a list of Sense apps opened in a user session be stored in Influxdb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;includeFields.&lt;br&gt;activeDocs&lt;/td&gt;
&lt;td&gt;Should a list of Sense apps loaded into memory (some apps might not currently be associated with a user session) be stored in Influxdb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.userSessions&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enableSessionExtract&lt;/td&gt;
&lt;td&gt;Influxdb password&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pollingInterval&lt;/td&gt;
&lt;td&gt;Influxdb password&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;excludeUser&lt;/td&gt;
&lt;td&gt;Array of users (=directory/userId pairs) that should be disregarded when user session data arrives from Sense.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Butler-SOS.serversToMonitor&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pollingInterval&lt;/td&gt;
&lt;td&gt;How often to query the Sense healthcheck API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;serverTagsDefinition&lt;/td&gt;
&lt;td&gt;List of tags to add to each server when storing the data in Influxdb. All tags defined here MUST be present in each server&amp;rsquo;s definition section further down in the config file!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers&lt;/td&gt;
&lt;td&gt;List of what servers to monitor. For each server a set of properties MUST be defined.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;host:4747&lt;/td&gt;
&lt;td&gt;FQDN of server. Domain should match that of the certificate exported from QMC - otherwise certificate warnings may appear. NOTE: You need to specify the port too - should be :4747 unless it&amp;rsquo;s been changed from default value (&lt;em&gt;very&lt;/em&gt; unusual to change this).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;serverName&lt;/td&gt;
&lt;td&gt;Human friendly server name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;serverDescription&lt;/td&gt;
&lt;td&gt;Human friendly server description&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;logDbHost&lt;/td&gt;
&lt;td&gt;Server&amp;rsquo;s name as it appears in the &lt;code&gt;process_host&lt;/code&gt; field log db. This is needed in order to link entries in logdb to the specific server at hand. See note below too!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;userSessions.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Control whether user session data should be retrieved for this server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;userSessions.&lt;br&gt;host&lt;/td&gt;
&lt;td&gt;Host and port from which to retrieve user session data. Usually on the form servername.mydomain.net:4243&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;userSessions.&lt;br&gt;virtualProxies&lt;/td&gt;
&lt;td&gt;A list of key-value pairs. Use to specify for which virtual proxies on this server user session data should be retrieved.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;serverTags&lt;/td&gt;
&lt;td&gt;A list of key-value pairs. Use to provide more metadata for servers. Can then (among other things) be used to created more advanced Grafana dashboards.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;code&gt;Butler-SOS.serversToMonitor.servers.logDbHost&lt;/code&gt; property can be tricky to get right. Easiest way to get the correct value is to look in the Nodes section in the QMC. In the &lt;code&gt;Host name&lt;/code&gt; column you find the host names of the various nodes. &lt;code&gt;logDbHost&lt;/code&gt; should be set to the first part of each host name:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./logdb-host-name-1.png&#34; alt=&#34;Log db host name&#34; title=&#34;Getting the log db host name property from QMC&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Available Metrics</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/reference/available_metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/reference/available_metrics/</guid>
      <description>
        
        
        &lt;h2 id=&#34;influxdb&#34;&gt;InfluxDB&lt;/h2&gt;
&lt;p&gt;All metrics retrieved from the Sense servers are stored in an &lt;a href=&#34;https://www.influxdata.com/products/influxdb-overview/&#34;&gt;InfluxDB&lt;/a&gt; database. You don&amp;rsquo;t have to be an InfluxDB expert to use Butler SOS, but understanding some basic concepts are helpful.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;InfluxDB is a &lt;a href=&#34;https://www.influxdata.com/time-series-database/&#34;&gt;time series database&lt;/a&gt;. This means it is super good at storing values that have a timestamp associated with them - and pretty bad at everything else. In many respects time series databases are the opposite of traditional SQL databases (who are usually pretty bad at handling time series data).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Because of it&amp;rsquo;s focus on time series data, InfluxDB has its own query language, &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/query_language/&#34;&gt;InfluxQL&lt;/a&gt;. It is somewhat similar to SQL, but also has many unique commands and features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Browsing through the &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/concepts/key_concepts/&#34;&gt;key concepts of InfluxDB&lt;/a&gt; is a good idea. There you will learn about things such as measurements, series and tags - which are all key to using data stored in InfluxDB.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;metrics-structure&#34;&gt;Metrics structure&lt;/h2&gt;
&lt;p&gt;The metrics are grouped based on what kind of Qlik Sense data they represent. InfluxDB is a &lt;em&gt;very&lt;/em&gt; capable database, so we will only touch on the basics here.&lt;/p&gt;
&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Measurements&lt;/em&gt; are just what it sounds like: snapshots of some value(s), taken at a specific point in time.
A measurement can contain several &lt;em&gt;field  keys&lt;/em&gt;, which for practical purposes can be viewed as the individual metrics.&lt;/p&gt;
&lt;p&gt;For example, the list of measurements look like this (using the InfluxDB command line client to explore the database structure):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; use SenseOps
Using database SenseOps
&amp;gt; show measurements
name: measurements
name
----
apps
butlersos_memory_usage
cache
cpu
log_event
mem
saturated
sense_server
session
user_session_list
user_session_summary
users

&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let&amp;rsquo;s take a look at what field keys the apps measurement contains:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; show field keys from apps
name: apps
fieldKey                     fieldType
--------                     ---------
active_docs                  string
active_docs_count            integer
active_docs_names            string
active_session_docs_names    string
calls                        integer
in_memory_docs               string
in_memory_docs_count         integer
in_memory_docs_names         string
in_memory_session_docs_names string
loaded_docs                  string
loaded_docs_count            integer
loaded_docs_names            string
loaded_session_docs_names    string
selections                   integer

&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ok, so the field keys are the actual metrics for which we gather data. Collectively those metrics (again: &lt;em&gt;field keys&lt;/em&gt; in InfluxDB lingo) above are grouped into a &lt;em&gt;measurement&lt;/em&gt; called &amp;lsquo;apps&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;There is one more concept you need to understand: &lt;em&gt;tag keys&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s pretty simple: Tag keys are used to categorise (or simply &amp;lsquo;tag&amp;rsquo;) measurements.&lt;br&gt;
Let&amp;rsquo;s say you use Butler SOS to collect data from ten Sense servers. That&amp;rsquo;s great, but how will you later distinguish between server 3 and server 8? You need some way of telling your Grafana dashboard to show the data for server 3 (if that&amp;rsquo;s what you want).&lt;/p&gt;
&lt;p&gt;Tags solve this. In the Butler SOS YAML config file you can define any number of tags that will be used to tag data coming in from Qlik Sense.&lt;/p&gt;
&lt;p&gt;The beauty of tags is that they play very nicely with Grafana - without them the Grafana dashboards would not be nearly as flexible as they are.&lt;/p&gt;
&lt;h3 id=&#34;measurements-and-fields&#34;&gt;Measurements and fields&lt;/h3&gt;
&lt;p&gt;The measurements are grouped based on what part of Sense they are retrieved from. The groups are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;General health metrics&lt;/li&gt;
&lt;li&gt;Messages from the log files&lt;/li&gt;
&lt;li&gt;Detailed metrics about what users are connected to (i.e. have sessions open with) which virtual proxies&lt;/li&gt;
&lt;li&gt;Metric relating to Butler SOS itself (i.e. not retrieved from Sense).&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;general-health-metrics&#34;&gt;General health metrics&lt;/h4&gt;
&lt;p&gt;A shared set of tag keys are available for all general health metrics:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In addition to the above, all tags defined in the YAML config file for the servers will be included as tag keys.&lt;/p&gt;
&lt;h5 id=&#34;measurement-apps&#34;&gt;Measurement: apps&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;active_docs&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;An array of GUIDs of active apps. Empty if no apps are active. An app is active when a user is currently performing some action on it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;active_docs_count&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of currently active apps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;active_docs_names&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Names of currently active (non-session) apps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;active_session_docs_names&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Names of currently active session apps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in_memory_docs&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;An array ofthe GUIDs of all apps currently loaded into the memory, even if they do not have any open sessions or connections to it. The apps disappear from the list when the engine has purged them out from memory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in_memory_docs_count&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Numer of apps currently in memory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in_memory_docs_names&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Names of (non-session) apps currently in memory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in_memory_session_docs_names&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Names of session apps currently in memory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loaded_docs&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;An array of the GUIDs of apps currently loaded into memory and that have open sessions or connections. Empty if no apps are loaded.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loaded_docs_count&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of currently loaded apps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loaded_docs_names&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Names of currently loaded (non-session) apps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loaded_session_docs_names&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Names of currently loaded session apps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;calls&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of calls to the Qlik associative engine since it started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;selections&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Numer of selections made in Qlik associative engine since it started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-cache&#34;&gt;Measurement: cache&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;added&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of cache objects added to the cache&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bytes_added&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of bytes added to the cache&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hits&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of cache hits in engine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lookups&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of lookups in egnine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;replaced&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of cache objects replaced&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-cpu&#34;&gt;Measurement: cpu&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;total&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Percentage of the CPU used by the engine, averaged over a time period of 30 seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-mem&#34;&gt;Measurement: mem&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;allocated&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;The total amount of allocated memory (committed + reserved) from the operating system in MB.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;committed&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;The total amount of committed memory for the engine process in MB.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;free&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;The total amount of free memory (minimum of free virtual and physical memory) in MB.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-saturated&#34;&gt;Measurement: saturated&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;saturated&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;When the value is true, the engine is running with high resource usage; otherwise the value is false. See link above for details.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-sense_server&#34;&gt;Measurement: sense_server&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;started&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;ISO timestamp when the engine service was started.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uptime&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Time since engine service was started (human readable).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;version&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Engine version.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-session&#34;&gt;Measurement: session&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;active&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of active engine sessions. A session is active when a user is currently performing some action on an app, for example, making selections or creating content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;total&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Total number of engine sessions.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-users&#34;&gt;Measurement: users&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;active&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of users currently doing something in some app.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;total&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of users with established sessions to the Sense server.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;log-events&#34;&gt;Log events&lt;/h4&gt;
&lt;p&gt;All log data written to InfluxDB share a common set of tag keys:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log_level&lt;/td&gt;
&lt;td&gt;The logging level of the log event (ERROR, WARNING, INFO etc).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;source_process&lt;/td&gt;
&lt;td&gt;Which Sense service the log event originated in.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-log_event&#34;&gt;Measurement: log_event&lt;/h5&gt;
&lt;p&gt;Source: More or less &lt;a href=&#34;https://help.qlik.com/en-US/sense-admin/June2020/Subsystems/DeployAdministerQSE/Content/Sense_DeployAdminister/QSEoW/Deploy_QSEoW/Qlik-Logging-Service.htm&#34;&gt;log db&lt;/a&gt;. A query is done to the log db in Postgres, the results are stored in InfluxDB. There is thus no Qlik API call per se.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Log entry as retrieved from the Sense log database (Postgres).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;user-session-details&#34;&gt;User session details&lt;/h4&gt;
&lt;p&gt;User session metrics have slightly different tag keys depending on the granularity level of the metric - those metrics are therefore listed under each heading below.&lt;/p&gt;
&lt;h5 id=&#34;measurement-user_session_summary&#34;&gt;Measurement: user_session_summary&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/ProxyServiceAPI/Content/Sense_ProxyServiceAPI/ProxyServiceAPI-Session-Module-API.htm&#34;&gt;Session module API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;session_count&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;Total number of sessions, per server and virtual proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;session_user_id_list&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;List of user IDs with sessions, per server and virtual proxy. NOTE: A single user may have more than one session open to a particular server/virtual proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Tag keys:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_host&lt;/td&gt;
&lt;td&gt;Host name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_virtual_proxy&lt;/td&gt;
&lt;td&gt;Virtual proxy name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-user_session_list&#34;&gt;Measurement: user_session_list&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/ProxyServiceAPI/Content/Sense_ProxyServiceAPI/ProxyServiceAPI-Session-Module-API.htm&#34;&gt;Session module API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;session_user_id_list&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;List of user IDs with sessions, per server and virtual proxy. NOTE: A single user may have more than one session open to a particular server/virtual proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Tag keys:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_host&lt;/td&gt;
&lt;td&gt;Host name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_virtual_proxy&lt;/td&gt;
&lt;td&gt;Virtual proxy name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;measurement-user_session_details&#34;&gt;Measurement: user_session_details&lt;/h5&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/June2020/Subsystems/ProxyServiceAPI/Content/Sense_ProxyServiceAPI/ProxyServiceAPI-Session-Module-API.htm&#34;&gt;Session module API&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;session_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Session GUID, uniquely identifying the session in the entire Sense cluster.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_directory&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Session user&amp;rsquo;s user directory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Session user ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Tag keys:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_host&lt;/td&gt;
&lt;td&gt;Host name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_virtual_proxy&lt;/td&gt;
&lt;td&gt;Virtual proxy name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_id&lt;/td&gt;
&lt;td&gt;Session GUID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_user_directory&lt;/td&gt;
&lt;td&gt;User&amp;rsquo;s user directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user_session_user_id&lt;/td&gt;
&lt;td&gt;User ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sos-metrics&#34;&gt;Butler SOS metrics&lt;/h4&gt;
&lt;p&gt;These metrics tell you how much memory Butler SOS itself uses.&lt;br&gt;
More info on these metrics and what they mean is available &lt;a href=&#34;https://www.valentinog.com/blog/node-usage/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;heap_total&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;Total size of the allocated heap.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;heap_used&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;Actual memory used during the execution of Butler SOS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;process_memory&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;Total memory allocated for the execution of Butler SOS.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
  </channel>
</rss>
