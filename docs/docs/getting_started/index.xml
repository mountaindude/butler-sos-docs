<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Butler SOS – Getting started</title>
    <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/</link>
    <description>Recent content in Getting started on Butler SOS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://butler-sos.ptarmiganlabs.com/docs/getting_started/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Overview</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/overview/</guid>
      <description>
        
        
        &lt;!-- 

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;

&lt;/div&gt;
 --&gt;
&lt;p&gt;&lt;img src=&#34;https://butler-sos.ptarmiganlabs.com/butler-sos-overview-1.png&#34; alt=&#34;Butler SOS&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;qlik-sense--devops--senseops&#34;&gt;Qlik Sense + DevOps = SenseOps&lt;/h2&gt;
&lt;p&gt;Butler SenseOps Stats (&amp;ldquo;Butler SOS&amp;rdquo;) is a monitoring tool for &lt;a href=&#34;https://www.qlik.com/us/products/qlik-sense&#34;&gt;Qlik Sense&lt;/a&gt;, built with DevOps workflows in mind.&lt;/p&gt;
&lt;p&gt;It publishes operational, close to real-time Qlik Sense Enterprise metrics to &lt;a href=&#34;https://www.influxdata.com/time-series-platform/influxdb/&#34;&gt;InfluxDB&lt;/a&gt;, &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/MQTT&#34;&gt;MQTT&lt;/a&gt;. From there it can be visualised using tools like &lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; or acted on by downstream systems that listen to the MQTT topics used by Butler SOS.&lt;/p&gt;
&lt;p&gt;Butler SOS gathers operational metrics from several sources, including the &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/May2021/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34;&gt;Sense healthcheck API&lt;/a&gt; and &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/May2021/Subsystems/ProxyServiceAPI/Content/Sense_ProxyServiceAPI/ProxyServiceAPI-Session-Module-API.htm&#34;&gt;Session API&lt;/a&gt;.&lt;br&gt;
It also pulls log events from &lt;a href=&#34;https://help.qlik.com/en-US/sense-admin/May2021/Subsystems/DeployAdministerQSE/Content/Sense_DeployAdminister/QSEoW/Deploy_QSEoW/Qlik-Logging-Service.htm&#34;&gt;Sense&amp;rsquo;s Postgres logging database&lt;/a&gt;, and forwards these to InfluxDB and MQTT.&lt;/p&gt;
&lt;h2 id=&#34;do-i-really-need-a-tool-like-this&#34;&gt;Do I really need a tool like this?&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s say you are somehow involved in (or maybe even responsible for) your company&amp;rsquo;s Qlik Sense environemnt.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s also assume you have more than 5-10 users in your Sense environment. Maybe you even have business critical data in your Sense apps.&lt;/p&gt;
&lt;p&gt;Given the above, the answer is almost certainly &amp;ldquo;yes&amp;rdquo; : You can simplify your workday and provide a better analytics experience to your end users by using a tool like Butler SOS.&lt;/p&gt;
&lt;h2 id=&#34;why-a-separate-tool-for-this&#34;&gt;Why a separate tool for this?&lt;/h2&gt;
&lt;p&gt;Good question.&lt;/p&gt;
&lt;p&gt;While Qlik Sense ships with a great Operations Monitor application, it is not useful or intended for real-time operational monitoring.&lt;br&gt;
The Ops Monitor app is great for retrospective analysis of what happened in a Qlik Sense environment, but for a real-time understanding of what&amp;rsquo;s going on in a Sense environment something else is needed - enter Butler SOS.&lt;/p&gt;
&lt;p&gt;The most common way of using Butler SOS is for creating real-time dashboards based on the data in the InfluxDB or Prometheus database, showing operational metrics for a Qlik Sense Enterprise environment.&lt;/p&gt;
&lt;p&gt;Sample screen shots of &lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; dashboards created using data extracted by Butler SOS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;butlersos_5_4_main_metrics.png&#34; alt=&#34;Grafana dashboard&#34; title=&#34;SenseOps dashboard showing errors and warnings, using Grafana 7&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;senseOps_dashboard_3.png&#34; alt=&#34;Grafana dashboard&#34; title=&#34;SenseOps dashboard showing errors and warnings, using Grafana 6&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;senseOps_dashboard_4.png&#34; alt=&#34;Grafana dashboard&#34; title=&#34;SenseOps dashboard showing Qlik Sense metrics, using Grafana 6&#34;&gt;&lt;/p&gt;
&lt;p&gt;As mentioned above, Butler SOS can also send data to &lt;a href=&#34;https://en.wikipedia.org/wiki/MQTT&#34;&gt;MQTT&lt;/a&gt; for use in any MQTT enabled tool or system.&lt;/p&gt;
&lt;h2 id=&#34;known-limitations--improvement-ideas&#34;&gt;Known limitations &amp;amp; improvement ideas&lt;/h2&gt;
&lt;p&gt;Things can always be improved, of course. Here are some ideas on things for future versions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The MQTT messages are kind of basic, at least when it comes to data from the Sense logs and for detailed user sessions. In both those cases a single text string is sent to MQTT. That&amp;rsquo;s fine, but assumes the downstream consumer of the MQTT message can parse the string and extract the information of interest.&lt;br&gt;
A better approach would be to send more detailed MQTT messages. Those would be easier to consume and act upon for downstream systems, but it would on the other mean  &lt;strong&gt;lots&lt;/strong&gt; more MQTT messages being sent.&lt;/li&gt;
&lt;li&gt;Send data as Kafka messages. Same basic idea as for MQTT messages, but having the Sense operational data in Kafka would make it easier to process/use it in (big) data pipelines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have ideas or suggestions on new features, please feel free to add them in the &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/issues/new/choose&#34;&gt;Butler SOS Github project&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;where-should-i-go-next&#34;&gt;Where should I go next?&lt;/h2&gt;
&lt;p&gt;Ready to move on?&lt;/p&gt;
&lt;p&gt;Great! Here are some good starting points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://butler-sos.ptarmiganlabs.com/docs/examples/&#34;&gt;Examples&lt;/a&gt;: Check out some Grafana dashboards to get inspiration what can be done!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://butler-sos.ptarmiganlabs.com/docs/getting_started/&#34;&gt;Installation &amp;amp; setup&lt;/a&gt;: Learn how to install Butler SOS, then set it up according to your needs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;i-have-a-question-or-want-to-report-an-issue&#34;&gt;I have a question or want to report an issue&lt;/h2&gt;
&lt;p&gt;Feel free to reach out via &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/discussions&#34;&gt;GitHub discussions&lt;/a&gt; for general questions, &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/issues&#34;&gt;GitHub issues&lt;/a&gt; for bugs, or by email to &lt;a href=&#34;mailto:info@ptarmiganlabs.com&#34;&gt;info@ptarmiganlabs.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;security--disclosure&#34;&gt;Security / Disclosure&lt;/h2&gt;
&lt;p&gt;If you discover any important bug with Butler SOS that may pose a security problem, please disclose it confidentially to &lt;a href=&#34;mailto://security@ptarmiganlabs.com&#34;&gt;security@ptarmiganlabs.com&lt;/a&gt; first, so that it can be assessed and hopefully fixed prior to being exploited. Please do not raise GitHub issues for security-related doubts or problems.&lt;/p&gt;
&lt;h2 id=&#34;whos-behind-butler-sos&#34;&gt;Who&amp;rsquo;s behind Butler SOS?&lt;/h2&gt;
&lt;p&gt;Butler SOS is an open source project sponsored by &lt;a href=&#34;https://ptarmiganlabs.com&#34;&gt;Ptarmigan Labs&lt;/a&gt;, an IT consulting company in Stockholm, Sweden. The main contributor to the tool is (so far) &lt;a href=&#34;https://www.linkedin.com/in/gorsan&#34;&gt;Göran Sander&lt;/a&gt; from same company.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href=&#34;https://butler-sos.ptarmiganlabs.com/docs/about/contributing/&#34;&gt;Contribution guidelines&lt;/a&gt; page for details on how to contribute, suggest features etc to the tool.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Installing Butler SOS</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install/</guid>
      <description>
        
        
        &lt;style type=&#34;text/css&#34;&gt;.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative}&lt;/style&gt;
&lt;div&gt;&lt;svg width=&#34;0&#34; height=&#34;0&#34; display=&#34;none&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;symbol id=&#34;tip-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;note-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;warning-notice&#34; viewBox=&#34;0 0 576 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;info-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z&#34;/&gt;&lt;/symbol&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&#34;notice warning&#34; &gt;
&lt;p class=&#34;first notice-title&#34;&gt;&lt;span class=&#34;icon-notice baseline&#34;&gt;&lt;svg&gt;&lt;use href=&#34;#warning-notice&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Warning&lt;/p&gt;&lt;p&gt;Butler SOS was developed with InfluxDB version 1.x in mind.&lt;/p&gt;
&lt;p&gt;InfluxDB is currently available in version 2.x and while this version brings lots of new goodies, it&amp;rsquo;s not out-of-the-box compatible with Butler SOS.&lt;br&gt;
For that reason you should use the latest 1.x version of InfluxDB, which at the time of this writing is 1.8.4.&lt;/p&gt;
&lt;p&gt;In due time Butler SOS will be updated to support InfluxDB 2.x too.&lt;/p&gt;&lt;/div&gt;

&lt;div class=&#34;notice tip&#34; &gt;
&lt;p class=&#34;first notice-title&#34;&gt;&lt;span class=&#34;icon-notice baseline&#34;&gt;&lt;svg&gt;&lt;use href=&#34;#tip-notice&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Tip&lt;/p&gt;&lt;p&gt;There is a &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/discussions/201&#34;&gt;Tips &amp;amp; Tricks to get started with Butler SOS&lt;/a&gt; document on the Butler SOS forums.&lt;/p&gt;
&lt;p&gt;It contains description of issues people have faced when installing Butler SOS, as well as solutions to them.&lt;/p&gt;&lt;/div&gt;



&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;If in doubt on how to install Butler SOS, please consider Docker as the first alternative.&lt;br&gt;
Why? Several reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Very quick to get started. Usually it takes just a few minutes to set up a Butler SOS instance in Docker.&lt;/li&gt;
&lt;li&gt;Using Docker is a great way to test new tools without having to install the tool on one of your actual servers. If you decide the tool in question is not for you - just delete the Docker container. Your servers remain 100% the same as before the test.&lt;/li&gt;
&lt;li&gt;The previous point is true not only for Butler SOS, but also its companion tools &lt;a href=&#34;https://www.influxdata.com/products/influxdb-overview/&#34;&gt;InfluxDB&lt;/a&gt;, &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt;, &lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/MQTT&#34;&gt;MQTT&lt;/a&gt; (via for example the &lt;a href=&#34;https://mosquitto.org/&#34;&gt;Mosquitto MQTT broker&lt;/a&gt;). You can run all of these tools in their own Docker containers, and not install a single piece of new, native applications during your evaluation of Butler SOS.&lt;/li&gt;
&lt;li&gt;No need to install Node.js on your server(s). Less security, performance and maintenance concerns.&lt;/li&gt;
&lt;li&gt;Make use of your existing Docker runtime environments, or use those offered by Amazon, Google, Microsoft etc.&lt;/li&gt;
&lt;li&gt;Benefit from the extremely comprehensive tools ecosystem (monitoring, deployment etc) that is available for Docker.&lt;/li&gt;
&lt;li&gt;Updating Butler SOS to the latest version (assuming no config file changes are needed for that particular upgrade) is as easy as stopping the container, doing a &amp;ldquo;docker pull ptarmiganlabs/butler-sos:latest&amp;rdquo;, and finally starting the container again.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;But even with the above Docker recommendation, Butler SOS &lt;em&gt;can&lt;/em&gt; be deployed in lots of different configurations.&lt;br&gt;
It is therefore difficult to give precise instructions that will work for all configurations. Especially the fact that Butler SOS uses certificates to authenticate with Sense is a complicating factor. Certificates are (when correctly used) great for securing systems, but they can alse cause headaches.&lt;/p&gt;
&lt;p&gt;First we must recognize that Sense uses &lt;a href=&#34;https://en.wikipedia.org/wiki/Self-signed_certificate&#34;&gt;self signed certificates&lt;/a&gt;. This is fine, and as long as you work on a server where Sense Enterprise is installed, that server will have the Sense-provided Certificate Authority (CA) certificate installed.&lt;/p&gt;
&lt;p&gt;This means that the easiest option for getting Butler SOS up and running is usually to install it on one of your Sense servers.&lt;/p&gt;
&lt;p&gt;That said, it is probably better system design to run Butler SOS (and maybe other members of the &lt;a href=&#34;https://github.com/ptarmiganlabs&#34;&gt;Butler family&lt;/a&gt;) on their own server, maybe using some flavour of Linux (lower cost compared to Windows). Windows servers work equally well though.&lt;/p&gt;
&lt;p&gt;In this case you might want to consider exporting the Sense CA certificate from one of your Sense servers, and then install it on the Linux server.
This &lt;em&gt;should&lt;/em&gt; technically not be needed for Butler SOS to work correctly - as long as you specify the correct root.pem file in the Butler SOS config file, you should be ok.&lt;/p&gt;
&lt;p&gt;If you specify an incorrect root CA certificate file in the &lt;code&gt;clientCertCA&lt;/code&gt; config option, you will get an error like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;2018-05-23T20:36:44.393Z - error: Error: Error: unable to verify the first certificate
    at TLSSocket.&amp;lt;anonymous&amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:1105:38&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at emitNone &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;events.js:106:13&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket.emit &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;events.js:208:7&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket._finishInit &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:639:8&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSWrap.ssl.onhandshakedone &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:469:38&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
2018-05-23T20:36:49.164Z - verbose: Event started: Query log db
2018-05-23T20:36:49.180Z - verbose: Event started: Statistics collection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A general note on host names is also relevant.&lt;br&gt;
If you specify a server name of &amp;ldquo;myserver.company.com&amp;rdquo; while exporting certificates from the QMC, you should use that same server name in the Butler SOS config file.  Failing to do so will (most likely) result in an error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;2018-05-23T19:51:03.087Z - error: Error: Error: Hostname/IP doesn&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;t match certificate&amp;#39;&lt;/span&gt;s altnames: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Host: serveralias.company.net. is not in the cert&amp;#39;s altnames: DNS:myserver.company.com&amp;#34;&lt;/span&gt;
    at Object.checkServerIdentity &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;tls.js:223:17&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket.&amp;lt;anonymous&amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:1111:29&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at emitNone &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;events.js:106:13&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket.emit &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;events.js:208:7&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket._finishInit &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:639:8&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSWrap.ssl.onhandshakedone &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:469:38&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
2018-05-23T19:51:07.701Z - verbose: Event started: Statistics collection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Setup</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/setup/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: Day 2 operations</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/operations/</guid>
      <description>
        
        
        &lt;h2 id=&#34;running-butler-sos&#34;&gt;Running Butler SOS&lt;/h2&gt;
&lt;p&gt;How to start and keep Butler SOS running varies depending on whether you are using Docker or a native Node.js approach.&lt;/p&gt;































&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;tabs-0&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link active tab-Docker&#34;
        id=&#34;tabs-0-0-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-0-0&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;Docker&amp;#34;);&#34;
        aria-controls=&#34;tabs-0-0&#34; aria-selected=&#34;true&#34;&gt;
        Docker
      &lt;/a&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link tab-Native-Node.js&#34;
        id=&#34;tabs-0-1-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-0-1&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;Native-Node.js&amp;#34;);&#34;
        aria-controls=&#34;tabs-0-1&#34; aria-selected=&#34;false&#34;&gt;
        Native Node.js
      &lt;/a&gt;
    &lt;/li&gt;&lt;/ul&gt;


&lt;div class=&#34;tab-content&#34; id=&#34;tabs-0-content&#34;&gt;&lt;div class=&#34;tab-pane fade show active&#34;
        id=&#34;tabs-0-0&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-0-0-tab&#34;&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;Starting Butler SOS using Docker is easy.  

First configure the `docker-compose.yml` file as needed, then start the Docker container in interactive mode (=with output sent to the screen).  
This is useful to ensure everything works as intended when first setting up Butler SOS.

    docker-compose up

Once Butler SOS has been verified to work as intended, hit `ctrl-c` to stop it.  
Then start it again in deameon (background) mode:

    docker-compose up -d

From here on the Docker enviromment will make sure Butler SOS is always running, including restarting it if it for some reason stops, when server reboots etc.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-0-1&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-0-1-tab&#34;&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;Starting Butler SOS as a Node.js on Windows could look like this:  

    d:
    cd \node\butler-sos\src
    node butler-sos.js

It is of course also possible to put those commands in a command file (.bat on Windows, .sh etc on other platforms) file and execute that file instead.

### Windows services &amp;amp; process monitors

As Butler SOS is the kind of service that (probably) should always be running on a server, it makes sense using a Node.js process monitor to keep it alive (if running Butler SOS as a Docker container you get this for free).

On Windows you can use the excellent Nssm tool (https://nssm.cc) to make Butler SOS run as a Windows Service, with all the benefits that follow (can be monitored using operations tools, automatic restarts etc).

If running Butler SOS as a Node.js app on Linux, PM2 (https://github.com/Unitech/pm2) and Forever (https://github.com/foreverjs/forever) are two process monitors that both have been successfully tested with Butler SOS.

One caveat with these is that it can be hard to start them (and thus Butler SOS) when a Windows server is rebooted.
PM2 can be used to solve this challenge in a nice way, more info in this blog post: https://ptarmiganlabs.com/blog/2017/07/12/monitoring-auto-starting-node-js-services-windows-server.  
On the other hand - just using Nssm is probably the easiest and best option for Windows.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  
&lt;/div&gt;


      </description>
    </item>
    
  </channel>
</rss>
