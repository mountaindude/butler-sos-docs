<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Butler SOS â€“ Getting started</title>
    <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/</link>
    <description>Recent content in Getting started on Butler SOS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://butler-sos.ptarmiganlabs.com/docs/getting_started/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Choosing a platform - what are the options?</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/choose_platform/</link>
      <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/choose_platform/</guid>
      <description>
        
        
        &lt;!-- 

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;

&lt;/div&gt;
 --&gt;

&lt;p&gt;As Butler SOS is written in Node.js, the tool in theory runs on all platforms where Node.js is available.
The tool is also available as a &lt;a href=&#34;https://hub.docker.com/r/ptarmiganlabs/butler-sos&#34; target=&#34;_blank&#34;&gt;Docker image&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Docker is &lt;strong&gt;by far&lt;/strong&gt; the preferred way of running Butler SOS, mainly because it gives you a very nice, production grade (stable, scalable, monitorable etc) execution environment.&lt;/p&gt;

&lt;p&gt;Other platforms can be used too, of course - let&amp;rsquo;s look at the pros and cons of some of the more commonly used platforms:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;th&gt;Pros&lt;/th&gt;
&lt;th&gt;Cons&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Docker&lt;/td&gt;
&lt;td&gt;- Easy to set up Butler SOS in Docker &lt;br&gt;- Easy to test new versions of Butler SOS &lt;br&gt;- Use existing Docker infrastructure&lt;br&gt;- Monitoring, restarts etc built into Docker&lt;br&gt; - Runs on low cost hardware&lt;/td&gt;
&lt;td&gt;- Docker environment needed (if not already available). Setting up and running Docker is not hard, but does require somewhat other skills than those needed to run a Sense environment&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Windows server&lt;/td&gt;
&lt;td&gt;- Butler SOS can run on same server as Qlik Sense, saving hardware/server costs&lt;/td&gt;
&lt;td&gt;- Running Butler SOS natively on the Sense server is a potential risk (usually a good idea to isolate systems to their own servers/environments whenever possible)&lt;br&gt;- More difficult (compared to Docker) to production grade setup (auto restarts etc)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;- No cost for operating system (at least not for most Linux versions)&lt;br&gt;- Runs on low cost hardware&lt;/td&gt;
&lt;td&gt;- More difficult (compared to Docker) to production grade setup (auto restarts etc)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Mac OS&lt;/td&gt;
&lt;td&gt;- For development, if you want to extend or modify Butler SOS&lt;/td&gt;
&lt;td&gt;- Not a server grade operating system, i.e. not for production use&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Windows (desktop)&lt;/td&gt;
&lt;td&gt;- For development, if you want to extend or modify Butler SOS&lt;/td&gt;
&lt;td&gt;- Not a server grade operating system, i.e. not for production use&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Install &amp; Configure</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/install_config/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;If in doubt on how to install Butler SOS, please consider Docker as the first alternative.&lt;br /&gt;
Why? Several reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Very quick to get started. Usually it takes just a few minutes to set up a Butler SOS instance in Docker.&lt;/li&gt;
&lt;li&gt;Using Docker is a great way to test new tools without having to install the tool on one of your actual servers. If you decide the tool in question is not for you - just delete the Docker container. Your servers remain 100% the same as before the test.&lt;/li&gt;
&lt;li&gt;The previous point is true not only for Butler SOS, but also its companion tools InfluxDB, Grafana and MQTT (via for example the Mosquitto MQTT broker). You can run all of these tools in their own Docker containers, and not install a single piece of new, native applications during your evaluation of Butler SOS.&lt;/li&gt;
&lt;li&gt;No need to install Node.js on your server(s). Less security, performance and maintenance concerns.&lt;/li&gt;
&lt;li&gt;Make use of your existing Docker runtime environments, or use those offered by Amazon, Google, Microsoft etc.&lt;/li&gt;
&lt;li&gt;Benefit from the extremely comprehensive tools ecosystem (monitoring, deployment etc) that is available for Docker.&lt;/li&gt;
&lt;li&gt;Updating Butler SOS to the latest version (assuming no config file changes are needed for that particular upgrade) is as easy as stopping the container, doing a &amp;ldquo;docker pull ptarmiganlabs/butler-sos:latest&amp;rdquo;, and finally starting the container again.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;


&lt;p&gt;&lt;br&gt;
But even with the above Docker recommendation, Butler SOS &lt;em&gt;can&lt;/em&gt; be deployed in lots of different configurations.&lt;br /&gt;
It is therefore difficult to give precise instructions that will work for all configurations. Especially the fact that Butler SOS uses certificates to authenticate with Sense is a complicating factor. Certificates are (when correctly used) great for securing systems, but they can alse cause headaches.&lt;/p&gt;

&lt;p&gt;First we must recognize that Sense uses &lt;a href=&#34;https://en.wikipedia.org/wiki/Self-signed_certificate&#34; target=&#34;_blank&#34;&gt;self signed certificates&lt;/a&gt;. This is fine, and as long as you work on a server where Sense Enterprise is installed, that server will have the Sense-provided Certificate Authority (CA) certificate installed.&lt;/p&gt;

&lt;p&gt;This means that the easiest option for getting Butler SOS up and running is usually to install it on one of your Sense servers.&lt;/p&gt;

&lt;p&gt;That said, it is probably better system design to run Butler SOS (and maybe other members of the &lt;a href=&#34;https://github.com/ptarmiganlabs&#34; target=&#34;_blank&#34;&gt;Butler family&lt;/a&gt;) on their own server, maybe using some flavour of Linux (lower cost compared to Windows).&lt;br /&gt;
In this case you might want to consider exporting the Sense CA certificate from one of your Sense servers, and then install it on the Linux server.
This &lt;em&gt;should&lt;/em&gt; technically not be needed for Butler SOS to work correctly - as long as you specify the correct root.pem file in the Butler SOS config file, you should be ok.&lt;/p&gt;

&lt;p&gt;If you specify an incorrect root CA certificate file in the &lt;code&gt;clientCertCA&lt;/code&gt; config option, you will get an error like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2018&lt;/span&gt;-05-23T20:36:44.393Z - error: Error: Error: unable to verify the first certificate
    at TLSSocket.&amp;lt;anonymous&amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:1105:38&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at emitNone &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;events.js:106:13&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket.emit &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;events.js:208:7&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket._finishInit &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:639:8&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSWrap.ssl.onhandshakedone &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:469:38&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2018&lt;/span&gt;-05-23T20:36:49.164Z - verbose: Event started: Query log db
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2018&lt;/span&gt;-05-23T20:36:49.180Z - verbose: Event started: Statistics collection&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A general note on host names is also relevant.&lt;br /&gt;
If you specify a server name of &amp;ldquo;myserver.company.com&amp;rdquo; while exporting certificates from the QMC, you should use that same server name in the Butler SOS config file.  Failing to do so will (most likely) result in an error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2018&lt;/span&gt;-05-23T19:51:03.087Z - error: Error: Error: Hostname/IP doesn&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;t match certificate&amp;#39;&lt;/span&gt;s altnames: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Host: serveralias.company.net. is not in the cert&amp;#39;s altnames: DNS:myserver.company.com&amp;#34;&lt;/span&gt;
    at Object.checkServerIdentity &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;tls.js:223:17&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket.&amp;lt;anonymous&amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:1111:29&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at emitNone &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;events.js:106:13&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket.emit &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;events.js:208:7&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSSocket._finishInit &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:639:8&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    at TLSWrap.ssl.onhandshakedone &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;_tls_wrap.js:469:38&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2018&lt;/span&gt;-05-23T19:51:07.701Z - verbose: Event started: Statistics collection&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Available Metrics</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/getting_started/influxdb_data_structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/getting_started/influxdb_data_structure/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;influxdb&#34;&gt;InfluxDB&lt;/h2&gt;

&lt;p&gt;All metrics retrieved from the Sense servers are stored in an &lt;a href=&#34;https://www.influxdata.com/products/influxdb-overview/&#34; target=&#34;_blank&#34;&gt;InfluxDB&lt;/a&gt; database. You don&amp;rsquo;t have to be an InfluxDB expert to use Butler SOS, but understanding some basic concepts are helpful.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;InfluxDB is a &lt;a href=&#34;https://www.influxdata.com/time-series-database/&#34; target=&#34;_blank&#34;&gt;time series database&lt;/a&gt;. This means it is super good at storing values that have a timestamp associated with them - and pretty bad at everything else. In many respects time series databases are the opposite of traditional SQL databases (who are usually pretty bad at handling time series data).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Because of it&amp;rsquo;s focus on time series data, InfluxDB has its own query language, &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/query_language/&#34; target=&#34;_blank&#34;&gt;InfluxQL&lt;/a&gt;. It is somewhat similar to SQL, but also has many unique commands and features.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Browsing through the &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/concepts/key_concepts/&#34; target=&#34;_blank&#34;&gt;key concepts of InfluxDB&lt;/a&gt; is a good idea. There you will learn about things such as measurements, series and tags - which are all key to using data stored in InfluxDB.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;metrics-structure&#34;&gt;Metrics structure&lt;/h2&gt;

&lt;p&gt;The metrics are grouped based on what kind of Qlik Sense data they represent. InfluxDB is a &lt;em&gt;very&lt;/em&gt; capable database, so we will only touch on the basics here.&lt;/p&gt;

&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Measurements&lt;/em&gt; are just what it sounds like: snapshots of some value(s), taken at a specific point in time.
A measurement can contain several &lt;em&gt;field  keys&lt;/em&gt;, which for practical purposes can be viewed as the individual metrics.&lt;/p&gt;

&lt;p&gt;For example, the list of measurements look like this (using the InfluxDB command line client to explore the database structure):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; use SenseOps
Using database SenseOps
&amp;gt; show measurements
name: measurements
name
----
apps
cache
cpu
log_event
mem
saturated
sense_server
session
user_session_details
user_session_list
user_session_summary
users

&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s take a look at what field keys the apps measurement contains:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; show field keys from apps
name: apps
fieldKey		fieldType
--------		---------
active_docs		string
active_docs_count	integer
calls			integer
in_memory_docs		string
in_memory_docs_count	integer
loaded_docs		string
loaded_docs_count	integer
selections		integer

&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok, so the field keys are the actual metrics for which we gather data. Collectively those metrics (again: &lt;em&gt;field keys&lt;/em&gt; in InfluxDB lingo) above are grouped into a &lt;em&gt;measurement&lt;/em&gt; called &amp;lsquo;apps&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;There is one more concept you need to understand: &lt;em&gt;tag keys&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s pretty simple: Tag keys are used to categorise (or simply &amp;lsquo;tag&amp;rsquo;) measurements.&lt;br /&gt;
Let&amp;rsquo;s say you use Butler SOS to collect data from ten Sense servers. That&amp;rsquo;s great, but how will you later distinguish between server 3 and server 8? You need some way of telling your Grafana dashboard to show the data for server 3 (if that&amp;rsquo;s what you want).&lt;/p&gt;

&lt;p&gt;Tags solve this. In the Butler SOS YAML config file you can define any number of tags that will be used to tag data coming in from Qlik Sense.&lt;/p&gt;

&lt;p&gt;The beauty of tags is that they play very nicely with Grafana - without them the Grafana dashboards would not be nearly as flexible as they are.&lt;/p&gt;

&lt;h3 id=&#34;measurements-and-fields&#34;&gt;Measurements and fields&lt;/h3&gt;

&lt;p&gt;The measurements are grouped based on what part of Sense they are retrieved from. The groups are&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;General health metrics&lt;/li&gt;
&lt;li&gt;Messages from the log files&lt;/li&gt;
&lt;li&gt;Detailed metrics about what users are connected to (i.e. have sessions open with) which virtual proxies&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;general-health-metrics&#34;&gt;General health metrics&lt;/h4&gt;

&lt;p&gt;A shared set of tag keys are available for all general health metrics:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In addition to the above, all tags defined in the YAML config file for the servers will be included as tag keys.&lt;/p&gt;

&lt;h5 id=&#34;measurement-apps&#34;&gt;Measurement: apps&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34; target=&#34;_blank&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;active_docs&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;An array of GUIDs of active apps. Empty if no apps are active. An app is active when a user is currently performing some action on it.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;active_docs_count&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of currently active apps&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;in_memory_docs&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;An array ofthe GUIDs of all apps currently loaded into the memory, even if they do not have any open sessions or connections to it. The apps disappear from the list when the engine has purged them out from memory.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;in_memory_docs_count&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Numer of apps currently in memory&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;loaded_docs&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;An array of the GUIDs of apps currently loaded into memory and that have open sessions or connections. Empty if no apps are loaded.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;loaded_docs_count&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of currently loaded apps&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;calls&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of calls to the Qlik associative engine since it started&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;selections&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Numer of selections made in Qlik associative engine since it started&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-cache&#34;&gt;Measurement: cache&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34; target=&#34;_blank&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;added&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of cache objects added to the cache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;bytes_added&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of bytes added to the cache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;hits&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of cache hits in engine&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;lookups&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of lookups in egnine&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;replaced&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of cache objects replaced&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-cpu&#34;&gt;Measurement: cpu&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34; target=&#34;_blank&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;total&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Percentage of the CPU used by the engine, averaged over a time period of 30 seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-mem&#34;&gt;Measurement: mem&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34; target=&#34;_blank&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;allocated&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;The total amount of allocated memory (committed + reserved) from the operating system in MB.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;committed&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;The total amount of committed memory for the engine process in MB.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;free&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;The total amount of free memory (minimum of free virtual and physical memory) in MB.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-saturated&#34;&gt;Measurement: saturated&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34; target=&#34;_blank&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;saturated&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;When the value is true, the engine is running with high resource usage; otherwise the value is false. See link above for details.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-sense-server&#34;&gt;Measurement: sense_server&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34; target=&#34;_blank&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;started&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;ISO timestamp when the engine service was started.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;uptime&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Time since engine service was started (human readable).&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;version&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Engine version.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-session&#34;&gt;Measurement: session&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34; target=&#34;_blank&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;active&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Number of active engine sessions. A session is active when a user is currently performing some action on an app, for example, making selections or creating content.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;total&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Total number of engine sessions.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-users&#34;&gt;Measurement: users&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/EngineAPI/Content/Sense_EngineAPI/GettingSystemInformation/HealthCheckStatus.htm&#34; target=&#34;_blank&#34;&gt;Health check API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;active&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;total&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;log-events&#34;&gt;Log events&lt;/h4&gt;

&lt;p&gt;All log data written to InfluxDB share a common set of tag keys:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;log_level&lt;/td&gt;
&lt;td&gt;The logging level of the log event (ERROR, WARNING, INFO etc).&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;source_process&lt;/td&gt;
&lt;td&gt;Which Sense service the log event originated in.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-log-event&#34;&gt;Measurement: log_event&lt;/h5&gt;

&lt;p&gt;Source: More or less &lt;a href=&#34;https://help.qlik.com/en-US/sense-admin/September2019/Subsystems/DeployAdministerQSE/Content/Sense_DeployAdminister/QSEoW/Deploy_QSEoW/Qlik-Logging-Service.htm&#34; target=&#34;_blank&#34;&gt;log db&lt;/a&gt;. A query is done to the log db in Postgres, the results are stored in InfluxDB. There is thus no Qlik API call per se.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;message&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Log entry as retrieved from the Sense log database (Postgres).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;user-session-details&#34;&gt;User session details&lt;/h4&gt;

&lt;p&gt;User session metrics have slightly different tag keys depending on the granularity level of the metric - those metrics are therefore listed under each heading below.&lt;/p&gt;

&lt;h5 id=&#34;measurement-user-session-summary&#34;&gt;Measurement: user_session_summary&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/ProxyServiceAPI/Content/Sense_ProxyServiceAPI/ProxyServiceAPI-Session-Module-API.htm&#34; target=&#34;_blank&#34;&gt;Session module API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;session_count&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;Total number of sessions, per server and virtual proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Tag keys:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_host&lt;/td&gt;
&lt;td&gt;Host name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_virtual_proxy&lt;/td&gt;
&lt;td&gt;Virtual proxy name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-user-session-list&#34;&gt;Measurement: user_session_list&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/ProxyServiceAPI/Content/Sense_ProxyServiceAPI/ProxyServiceAPI-Session-Module-API.htm&#34; target=&#34;_blank&#34;&gt;Session module API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;session_user_id_list&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;List of user IDs with sessions, per server and virtual proxy. NOTE: A single user may have more than one session open to a particular server/virtual proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Tag keys:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_host&lt;/td&gt;
&lt;td&gt;Host name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_virtual_proxy&lt;/td&gt;
&lt;td&gt;Virtual proxy name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&#34;measurement-user-session-details&#34;&gt;Measurement: user_session_details&lt;/h5&gt;

&lt;p&gt;Source: &lt;a href=&#34;https://help.qlik.com/en-US/sense-developer/September2019/Subsystems/ProxyServiceAPI/Content/Sense_ProxyServiceAPI/ProxyServiceAPI-Session-Module-API.htm&#34; target=&#34;_blank&#34;&gt;Session module API&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;session_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Session GUID, uniquely identifying the session in the entire Sense cluster.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_directory&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Session user&amp;rsquo;s user directory.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Session user ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Tag keys:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tag key&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;Host name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].host&lt;/code&gt; property. Usually a fully qualified host name, or in some cases an IP address.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_name&lt;/td&gt;
&lt;td&gt;Human readible/friednly server name, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverName&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;server_description&lt;/td&gt;
&lt;td&gt;Description of the server, taken from config file&amp;rsquo;s &lt;code&gt;Butler-SOS.serversToMonitor.servers[].serverDescription&lt;/code&gt; property.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_host&lt;/td&gt;
&lt;td&gt;Host name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_virtual_proxy&lt;/td&gt;
&lt;td&gt;Virtual proxy name the session metrics are associated with.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_id&lt;/td&gt;
&lt;td&gt;Session GUID&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_user_directory&lt;/td&gt;
&lt;td&gt;User&amp;rsquo;s user directory&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;user_session_user_id&lt;/td&gt;
&lt;td&gt;User ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
  </channel>
</rss>
