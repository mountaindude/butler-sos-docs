<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Butler SOS â€“ Reference docs</title>
    <link>https://butler-sos.ptarmiganlabs.com/docs/reference/</link>
    <description>Recent content in Reference docs on Butler SOS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://butler-sos.ptarmiganlabs.com/docs/reference/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Config file format</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/reference/config_file_format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/reference/config_file_format/</guid>
      <description>
        
        
        &lt;style type=&#34;text/css&#34;&gt;.notice{--root-color:#444;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#c33;--warning-content:#fee;--info-title:#fb7;--info-content:#fec;--note-title:#6be;--note-content:#e7f2fa;--tip-title:#5a5;--tip-content:#efe}@media (prefers-color-scheme:dark){.notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}}body.dark .notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:var(--root-color);background:var(--root-background)}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:var(--title-color);background:var(--title-background)}.notice.warning .notice-title{background:var(--warning-title)}.notice.warning{background:var(--warning-content)}.notice.info .notice-title{background:var(--info-title)}.notice.info{background:var(--info-content)}.notice.note .notice-title{background:var(--note-title)}.notice.note{background:var(--note-content)}.notice.tip .notice-title{background:var(--tip-title)}.notice.tip{background:var(--tip-content)}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:.125em;position:relative}&lt;/style&gt;
&lt;div&gt;&lt;svg width=&#34;0&#34; height=&#34;0&#34; display=&#34;none&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;symbol id=&#34;tip-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;note-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;warning-notice&#34; viewBox=&#34;0 0 576 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z&#34;/&gt;&lt;/symbol&gt;&lt;symbol id=&#34;info-notice&#34; viewBox=&#34;0 0 512 512&#34; preserveAspectRatio=&#34;xMidYMid meet&#34;&gt;&lt;path d=&#34;M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z&#34;/&gt;&lt;/symbol&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div class=&#34;notice tip&#34; &gt;
&lt;p class=&#34;first notice-title&#34;&gt;&lt;span class=&#34;icon-notice baseline&#34;&gt;&lt;svg&gt;&lt;use href=&#34;#tip-notice&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Tip&lt;/p&gt;&lt;p&gt;Either JSON or YAML notation can be used to create the configuration file, with file extensions of .json and .yaml/.yml, respectively.&lt;/p&gt;
&lt;p&gt;YAML is strongly recommended, as it is easier to edit/read/understand compared to JSON.&lt;/p&gt;&lt;/div&gt;

&lt;p&gt;The parameters in the config file are described below.
All parameters must be defined in the config file - run time errors are likely to occur otherwise.
The &lt;a href=&#34;https://github.com/ptarmiganlabs/butler-sos/blob/master/src/config/production_template.yaml&#34;&gt;sample config file&lt;/a&gt; looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./configfile_9_2.png&#34; alt=&#34;Sample config file&#34; title=&#34;Sample Butler SOS config file&#34;&gt;&lt;/p&gt;
&lt;p&gt;A few things to keep in mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Topic names (e.g. &amp;ldquo;Butler-SOS.logdb&amp;rdquo;) are case sensitive.&lt;/li&gt;
&lt;li&gt;First time Butler SOS is started, a new check is done if the specified InfluxDB database already exists.
If it doesn&amp;rsquo;t exist it will be created together with a default InfluxDB retention policy. The retention policy is based on the time period set in the config file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;top-level&#34;&gt;Top level&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logLevel&lt;/td&gt;
&lt;td&gt;The level of details in the logs. Possible values are silly, debug, verbose, info, warn, error (in order of decreasing level of detail).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fileLogging&lt;/td&gt;
&lt;td&gt;true/false to enable/disable logging to disk file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logDirectory&lt;/td&gt;
&lt;td&gt;Subdirectory where log files are stored&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;anonTelemetry&lt;/td&gt;
&lt;td&gt;Can Butler SOS share anonymous data about itself with the Butler SOS project? More info on whata data is collected &lt;a href=&#34;https://butler-sos.ptarmiganlabs.com/docs/about/telemetry&#34;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosheartbeat&#34;&gt;Butler-SOS.heartbeat&lt;/h4&gt;
&lt;p&gt;Heartbeats can be used to send &amp;ldquo;I&amp;rsquo;m alive&amp;rdquo; messages to some other tool, e.g. an infrastructure monitoring tool.&lt;br&gt;
The concept is simple: The remoteURL will be called at the specified frequency. The receiving tool will then know that Butler SOS is alive.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should heartbeats be sent to some URL, indicating that Butler SOS is alive and well? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remoteURL&lt;/td&gt;
&lt;td&gt;URL that will be called for heartbeats&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frequency&lt;/td&gt;
&lt;td&gt;How often should heartbeats be sent? Format according to &lt;a href=&#34;https://bunkat.github.io/later/parsers.html#text&#34;&gt;https://bunkat.github.io/later/parsers.html#text&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosdockerhealthcheck&#34;&gt;Butler-SOS.dockerHealthCheck&lt;/h4&gt;
&lt;p&gt;Docker health checks are used when running Butler SOS as a Docker container.&lt;/p&gt;
&lt;p&gt;The Docker engine will call the container&amp;rsquo;s health check REST endpoint with a set interval to determine whether the container is alive/well or not.&lt;br&gt;
If you are &lt;em&gt;not&lt;/em&gt; running Butler SOS in Docker you can disable this feature.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should a Docker healthcheck endpoint be created within Butler SOS? Set to false if &lt;em&gt;not&lt;/em&gt; running Butler SOS under Docker. true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;Port the healthcheck should use. Usually 12398, but might need be changed if seveal Butler instances run on the same server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosuptimemonitor&#34;&gt;Butler-SOS.uptimeMonitor&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should messages with Butler SOS uptime and memory usage be written to console and logs? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frequency&lt;/td&gt;
&lt;td&gt;How often should uptime messages be written to console and/or logs? Format according to &lt;a href=&#34;https://bunkat.github.io/later/parsers.html#text&#34;&gt;https://bunkat.github.io/later/parsers.html#text&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logLevel&lt;/td&gt;
&lt;td&gt;Starting at what log level should uptime messages be used? Possible values are silly, debug, verbose, info, warn, error. For example, if you specify &amp;ldquo;verbose&amp;rdquo; here, uptime messages will appear if you set overall log level to silly, debug or verbose.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeInInfluxdb.&lt;br&gt;butlerSOSMemoryUsage&lt;/td&gt;
&lt;td&gt;Should data on Butler SOS&amp;rsquo; own memory use be stored in Infludb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeInInfluxdb.&lt;br&gt;instanceTag&lt;/td&gt;
&lt;td&gt;Tag used to differentiate data from multiple Butler SOS instances. Useful if running different Butler SOS instances against (for example) DEV, TEST and PROD environments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeNewRelic.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Should uptime data be sent to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeNewRelic.&lt;br&gt;destinationAccount&lt;/td&gt;
&lt;td&gt;Array of New Relic account names to which uptime data will be sent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeNewRelic.&lt;br&gt;metric.dynamic.&lt;br&gt;butlerMemoryUsage.enable&lt;/td&gt;
&lt;td&gt;Should Butler SOS memory metrics be sent to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeNewRelic.&lt;br&gt;metric.dynamic.&lt;br&gt;butlerUptime.enable&lt;/td&gt;
&lt;td&gt;Should Butler uptime (days, hours, minutes since startup) be sent to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeNewRelic.&lt;br&gt;attribute.static&lt;/td&gt;
&lt;td&gt;Array of attributes which will be added to all uptime metrics sent to New Relic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storeNewRelic.&lt;br&gt;attribute.dynamic.&lt;br&gt;butlerVersion.enable&lt;/td&gt;
&lt;td&gt;Should uptime metrics be tagged with Butler SOS version number? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosthirdpartytoolscredentials&#34;&gt;Butler-SOS.thirdPartyToolsCredentials&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;newRelic&lt;/td&gt;
&lt;td&gt;Should messages with Butler SOS uptime and memory usage be written to console and logs? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosuserevents&#34;&gt;Butler-SOS.userEvents&lt;/h4&gt;
&lt;p&gt;Track individual users opening/closing apps and starting/stopping sessions.&lt;br&gt;
Requires log appender XML file(s) to be added to Sense server(s).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should Butler SOS track detailed user events (i.e. session start/stop, connection open/close)? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;excludeUser&lt;/td&gt;
&lt;td&gt;Array of users (=directory/userId pairs) that should be disregarded when user events arrive from Sense. Remove sample users before deploying Butler SOS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;udpServerConfig.&lt;br&gt;serverHost&lt;/td&gt;
&lt;td&gt;IP/host where the user event UDP server should listen for incoming connections. Usually the same IP/host as where Butler SOS is running. Using 0.0.0.0 will cause Butler SOS to listen on all available IPs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;udpServerConfig.&lt;br&gt;portUserActivityEvents&lt;/td&gt;
&lt;td&gt;Port on which the user event UDP server will listen. Should match the port specified in the log appender.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;Array of tags (tagName/tagValue pairs) that should be added to each user event before sending it to InfluxDB. Remove sample tags before deploying Butler SOS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.enable&lt;/td&gt;
&lt;td&gt;Should user events be sent to MQTT? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;everythingTopic.enable&lt;/td&gt;
&lt;td&gt;Should &lt;strong&gt;all&lt;/strong&gt; user event messages be sent to an MQTT topic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;everythingTopic.topic&lt;/td&gt;
&lt;td&gt;MQTT topic to which &lt;strong&gt;all&lt;/strong&gt; user event messages will be sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;sessionStartTopic.enable&lt;/td&gt;
&lt;td&gt;Should &lt;strong&gt;session start&lt;/strong&gt; user event messages be sent to an MQTT topic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;sessionStartTopic.topic&lt;/td&gt;
&lt;td&gt;MQTT topic to which &lt;strong&gt;session start&lt;/strong&gt; user event messages will be sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;sessionStopTopic.enable&lt;/td&gt;
&lt;td&gt;Should &lt;strong&gt;session stop&lt;/strong&gt; user event messages be sent to an MQTT topic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;sessionStopTopic.topic&lt;/td&gt;
&lt;td&gt;MQTT topic to which &lt;strong&gt;session stop&lt;/strong&gt; user event messages will be sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;connectionOpenTopic.enable&lt;/td&gt;
&lt;td&gt;Should &lt;strong&gt;connection open&lt;/strong&gt; user event messages be sent to an MQTT topic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;connectionOpenTopic.topic&lt;/td&gt;
&lt;td&gt;MQTT topic to which &lt;strong&gt;connection open&lt;/strong&gt; user event messages will be sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;connectionCloseTopic.enable&lt;/td&gt;
&lt;td&gt;Should &lt;strong&gt;connection close&lt;/strong&gt; user event messages be sent to an MQTT topic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo.&lt;br&gt;connectionCloseTopic.topic&lt;/td&gt;
&lt;td&gt;MQTT topic to which &lt;strong&gt;connection close&lt;/strong&gt; user event messages will be sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToInfluxdb.enable&lt;/td&gt;
&lt;td&gt;Should user events be saved in InfluxDB? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.enable&lt;/td&gt;
&lt;td&gt;Should user events be saved in New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.destinationAccount&lt;/td&gt;
&lt;td&gt;Array of New Relic account names to which user events will be sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.scramble&lt;/td&gt;
&lt;td&gt;Should &lt;code&gt;user directory&lt;/code&gt; and &lt;code&gt;user ID&lt;/code&gt; fields be scrambled before user events are sent to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-soslogevents&#34;&gt;Butler-SOS.logEvents&lt;/h4&gt;
&lt;p&gt;Log events are used to capture Sense warnings, errors and fatals in real time.
Requires log appender XML file(s) to be added to Sense server(s).&lt;/p&gt;
&lt;p&gt;Note that log events can be enabled/disabled per source (repository, proxy, scheduler etc).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;udpServerConfig.&lt;br&gt;serverHost&lt;/td&gt;
&lt;td&gt;IP/host where the log event UDP server should listen for incoming connections. Usually the same IP/host as where Butler SOS is running. Using 0.0.0.0 will cause Butler SOS to listen on all available IPs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;udpServerConfig.&lt;br&gt;portLogEvents&lt;/td&gt;
&lt;td&gt;Port on which the log event UDP server will listen. Should match the port specified in the log appender.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;Array of tags (tagName/tagValue pairs) that should be added to each log event before sending it to InfluxDB. Remove sample tags before deploying Butler SOS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;source.&lt;br&gt;engine.enable&lt;/td&gt;
&lt;td&gt;Should log events from the engine service be handled by Butler SOS? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;source.&lt;br&gt;proxy.enable&lt;/td&gt;
&lt;td&gt;Should log events from the proxy service be handled by Butler SOS? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;source.&lt;br&gt;repository.enable&lt;/td&gt;
&lt;td&gt;Should log events from the repository service be handled by Butler SOS? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;source.&lt;br&gt;scheduler.enable&lt;/td&gt;
&lt;td&gt;Should log events from the scheduler service be handled by Butler SOS? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.enable&lt;/td&gt;
&lt;td&gt;Should log events be sent to MQTT? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.baseTopic&lt;/td&gt;
&lt;td&gt;Root MQTT topic. All log events MQTT messages will be posted in this topic or subtopics of it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo&lt;br&gt;.baseTopic&lt;/td&gt;
&lt;td&gt;Should all log events be posted to the root topic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToMQTT.postTo&lt;br&gt;.subsystemTopics&lt;/td&gt;
&lt;td&gt;All log events originate from a specific subsystem in a Sense server. These subsystems are organised in a hierarchical tree that can be directly mapped to MQTT topics. Should log events be posted as MQTT messages to such topics? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToInfluxdb.enable&lt;/td&gt;
&lt;td&gt;Should log events be saved in InfluxDB? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.enable&lt;/td&gt;
&lt;td&gt;Should log events be sent to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.destinationAccount&lt;/td&gt;
&lt;td&gt;Array of New Relic account names to which log events will be sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.engine.enable&lt;/td&gt;
&lt;td&gt;Should log events from the engine service be handled?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.engine.logLevel.error&lt;/td&gt;
&lt;td&gt;Should ERROR log events from the engine service be handled?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.engine.logLevel.warn&lt;/td&gt;
&lt;td&gt;Should WARN log events from the engine service be handled?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.proxy.enable&lt;/td&gt;
&lt;td&gt;Should log events from the proxy service be handled?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.proxy.logLevel.error&lt;/td&gt;
&lt;td&gt;Should ERROR log events from the proxy service be handled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.proxy.logLevel.warn&lt;/td&gt;
&lt;td&gt;Should WARN log events from the proxy service be handled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.repository.enable&lt;/td&gt;
&lt;td&gt;Should log events from the repository service be handled?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.repository.logLevel.error&lt;/td&gt;
&lt;td&gt;Should ERROR log events from the repository service be handled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.repository.logLevel.warn&lt;/td&gt;
&lt;td&gt;Should WARN log events from the repository service be handled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.scheduler.enable&lt;/td&gt;
&lt;td&gt;Should log events from the scheduler service be handled?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.scheduler.logLevel.error&lt;/td&gt;
&lt;td&gt;Should ERROR log events from the scheduler service be handled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sendToNewRelic.&lt;br&gt;source.scheduler.logLevel.warn&lt;/td&gt;
&lt;td&gt;Should WARN log events from the scheduler service be handled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-soslogdb&#34;&gt;Butler-SOS.logdb&lt;/h4&gt;
&lt;p&gt;As of August 2021 log db has been deprecated in Qlik Sense.&lt;br&gt;
It is no longer installed when doing fresh QSEoW installs.&lt;/p&gt;
&lt;p&gt;To support older QSEoW clusters out there Butler SOS will for now keep log db support intact.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should Sense log db be queried for warnings/errors/info messages? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pollingInterval&lt;/td&gt;
&lt;td&gt;How often to query log db. Milliseconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;queryPeriod&lt;/td&gt;
&lt;td&gt;How far back should log db be queried? Human readable, e.g. &amp;ldquo;5 minutes&amp;rdquo; (which is also the default value)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;IP or FQDN of server where Sense log db is running&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;Port used by log db. 4432 unless changed during installation of Sense&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;qlogsReaderUser&lt;/td&gt;
&lt;td&gt;User to connect to log db as. &amp;ldquo;qlogs_reader&amp;rdquo; unless changed during installation of Sense&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;qlogsReaderPwd&lt;/td&gt;
&lt;td&gt;Password of above user&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extractErrors&lt;/td&gt;
&lt;td&gt;Should error entries be extracted from log db? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extractWarnings&lt;/td&gt;
&lt;td&gt;Should warning entries be extracted from log db? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extractInfo&lt;/td&gt;
&lt;td&gt;Should info entries be extracted from log db? true/false. &lt;br&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If info level logging is enabled, this will result in lots of messages being stored in Influxdb (at least for a busy Sense cluster).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-soscert&#34;&gt;Butler-SOS.cert&lt;/h4&gt;
&lt;p&gt;Certificates to use when connecting to Sense. Get these from the Certificate Export in QMC.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;clientCert&lt;/td&gt;
&lt;td&gt;Certificate file. Exported from QMC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clientCertKey&lt;/td&gt;
&lt;td&gt;Certificate key file. Exported from QMC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clientCertCA&lt;/td&gt;
&lt;td&gt;Root certificate for above certificate files. Exported from QMC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clientCertPassphrase&lt;/td&gt;
&lt;td&gt;Password used to protect the certificate (as set when exporting cert from QMC)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosmqttconfig&#34;&gt;Butler-SOS.mqttConfig&lt;/h4&gt;
&lt;p&gt;MQTT config parameters. These must be correctly defined for any other MQTT features in Butler SOS to work.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should health metrics be sent to MQTT? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brokerHost&lt;/td&gt;
&lt;td&gt;IP or FQDN of MQTT broker&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brokerPort&lt;/td&gt;
&lt;td&gt;Broker port&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;baseTopic&lt;/td&gt;
&lt;td&gt;Default topic used if not not oherwise specified elsewhere. Should end with /. For example butler-sos/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosnewrelic&#34;&gt;Butler-SOS.newRelic&lt;/h4&gt;
&lt;p&gt;If enabled, select Butler SOS metrics and events will be sent to New Relic.&lt;/p&gt;
&lt;p&gt;Note that New Relic destination accounts for events are defined in the &lt;code&gt;Butler-SOS.userEvent&lt;/code&gt; and &lt;code&gt;Butler-SOS.logEvent&lt;/code&gt; sections, whereas destination accounts for metrics are defined in this section (&lt;code&gt;Butler-SOS.newRelic&lt;/code&gt;).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should Qlik Sense health metrics be sent to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;event.url&lt;/td&gt;
&lt;td&gt;Which API URL should be used for sending events to New Relic?&lt;br&gt;At time of this writing the options are&lt;br&gt;&lt;a href=&#34;https://insights-collector.eu01.nr-data.net&#34;&gt;https://insights-collector.eu01.nr-data.net&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://insights-collector.newrelic.com&#34;&gt;https://insights-collector.newrelic.com&lt;/a&gt;&lt;br&gt;More info here: &lt;a href=&#34;https://docs.newrelic.com/docs/accounts/accounts-billing/account-setup/choose-your-data-center&#34;&gt;https://docs.newrelic.com/docs/accounts/accounts-billing/account-setup/choose-your-data-center&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;event.header&lt;/td&gt;
&lt;td&gt;Array of name/value pairs that will be added as http headers to all calls to the New Relic event API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;event.attribute.&lt;br&gt;static&lt;/td&gt;
&lt;td&gt;Array of name/value pairs, representing attributes/tags that will be added to all events sent to New Relic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;event.attribute.&lt;br&gt;dynamic.butlerSosVersion.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Should Butler SOS&amp;rsquo; version be attached as an attribute to events sent to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.destinationAccount&lt;/td&gt;
&lt;td&gt;Array of New Relic account names to which Sense health metrics will be sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.url&lt;/td&gt;
&lt;td&gt;Which API URL should be used for sending Sense health metrics to New Relic?&lt;br&gt;At time of this writing the options are&lt;br&gt;&lt;a href=&#34;https://insights-collector.eu01.nr-data.net/metric/v1&#34;&gt;https://insights-collector.eu01.nr-data.net/metric/v1&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://metric-api.newrelic.com/metric/v1&#34;&gt;https://metric-api.newrelic.com/metric/v1&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.header&lt;/td&gt;
&lt;td&gt;Array of name/value pairs that will be added as http headers to all calls to the New Relic metric API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;engine.memory.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send Sense memory metrics to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;engine.cpu.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send Sense CPU metrics to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;engine.calls.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send metrics about calls to the Sense engine to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;engine.selections.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send metrics about number of selections made in Sense apps to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;engine.sessions.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send aggregated Sense engine session metrics to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;engine.users.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send aggregated Sense user metrics to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;engine.saturated.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send Sense engine saturation status to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;apps.docCount.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send metrics on loaded/active/in-memory Sense apps to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;cache.cache.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send Sense cache metrics to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.dynamic.&lt;br&gt;proxy.sessions.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Send aggregated Sense proxy metrics to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.attribute.&lt;br&gt;static&lt;/td&gt;
&lt;td&gt;Array of name/value pairs, representing attributes/tags that will be added to all Sense health metrics sent to New Relic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metric.attribute.&lt;br&gt;dynamic.butlerSosVersion.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Should Butler SOS&amp;rsquo; version be attached as an attribute to Sense health metrics sent to New Relic? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosprometheus&#34;&gt;Butler-SOS.prometheus&lt;/h4&gt;
&lt;p&gt;If enabled, select Butler SOS metrics will be exposed on a Prometheus compatible URL from where they can be scraped by Prometheus.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should health metrics be made available for scraping on a Prometheus compatible API http endpoint? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;IP on which the Prometheus compatible endpoint should be available. Using 0.0.0.0 will cause Butler SOS to listen on all available IPs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;Port on which the Prometheus compatible endpoint will be made available. Default 9842.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosinfluxdbconfig&#34;&gt;Butler-SOS.influxdbConfig&lt;/h4&gt;
&lt;p&gt;InfluxDB config parameters. These must be correctly defined for any other InfluxDB features in Butler SOS to work.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;Should health metrics be stored in Influxdb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hostIP&lt;/td&gt;
&lt;td&gt;IP or FQDN of Influxdb server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hostPort&lt;/td&gt;
&lt;td&gt;Port where Influxdb server is listening. Useful if Influxdb for some reason is not using its standard port of 8086.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth.enable&lt;/td&gt;
&lt;td&gt;Enable if data is to be stored in a password protected Influxdb database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth.username&lt;/td&gt;
&lt;td&gt;Influxdb username.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth.password&lt;/td&gt;
&lt;td&gt;Influxdb password.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbName&lt;/td&gt;
&lt;td&gt;Database namne in Influxdb to which health metrics will be stored. Database will be created if it does not already exist when Butler SOS is started.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;retentionPolicy.&lt;br&gt;name&lt;/td&gt;
&lt;td&gt;Name of default retention policy that will be created in InfluxDB database when that database is created during first execution of Butler SOS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;retentionPolicy.&lt;br&gt;duration&lt;/td&gt;
&lt;td&gt;Duration during which metrics are kept in InfluxDB. After the duration has passed, InfluxDB will purge all data older than duration from the database. See &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.8/query_language/spec/#durations&#34;&gt;InfluxDB docs&lt;/a&gt; for details on syntax.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;includeFields.&lt;br&gt;activeDocs&lt;/td&gt;
&lt;td&gt;Should a list of currently active Sense apps be stored in Influxdb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;includeFields.&lt;br&gt;loadedDocs&lt;/td&gt;
&lt;td&gt;Should a list of Sense apps opened in a user session be stored in Influxdb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;includeFields.&lt;br&gt;activeDocs&lt;/td&gt;
&lt;td&gt;Should a list of Sense apps loaded into memory (some apps might not currently be associated with a user session) be stored in Influxdb? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosappnames&#34;&gt;Butler-SOS.appNames&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enableAppNameExtract&lt;/td&gt;
&lt;td&gt;Should app names be extracted from Qlik Sense server? true/false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extractInterval&lt;/td&gt;
&lt;td&gt;How often (milliseconds) should app names be extracted from Sense server?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hostIP&lt;/td&gt;
&lt;td&gt;IP or FQDN of Sense server from which app names should be extracted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosusersessions&#34;&gt;Butler-SOS.userSessions&lt;/h4&gt;
&lt;p&gt;Extract user session data per virtual proxy.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;enableSessionExtract&lt;/td&gt;
&lt;td&gt;Influxdb password&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pollingInterval&lt;/td&gt;
&lt;td&gt;Influxdb password&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;excludeUser&lt;/td&gt;
&lt;td&gt;Array of users (=directory/userId pairs) that should be disregarded when user session data arrives from Sense.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;butler-sosserverstomonitor&#34;&gt;Butler-SOS.serversToMonitor&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pollingInterval&lt;/td&gt;
&lt;td&gt;How often to query the Sense healthcheck API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rejectUnauthorized&lt;/td&gt;
&lt;td&gt;Set to false to ignore warnings/errors caused by Qlik Sense&amp;rsquo;s self-signed certificates. &lt;br&gt; Set to true if the Qlik Sense root CA is available on the computer where Butler SOS is running.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;serverTagsDefinition&lt;/td&gt;
&lt;td&gt;List of tags to add to each server when storing the data in Influxdb. All tags defined here MUST be present in each server&amp;rsquo;s definition section further down in the config file!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers&lt;/td&gt;
&lt;td&gt;List of what servers to monitor. For each server a set of properties MUST be defined.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;host:4747&lt;/td&gt;
&lt;td&gt;FQDN of server. Domain should match that of the certificate exported from QMC - otherwise certificate warnings may appear. NOTE: You need to specify the port too - should be :4747 unless it&amp;rsquo;s been changed from default value (&lt;em&gt;very&lt;/em&gt; unusual to change this).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;serverName&lt;/td&gt;
&lt;td&gt;Human friendly server name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;serverDescription&lt;/td&gt;
&lt;td&gt;Human friendly server description&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;logDbHost&lt;/td&gt;
&lt;td&gt;Server&amp;rsquo;s name as it appears in the &lt;code&gt;process_host&lt;/code&gt; field log db. This is needed in order to link entries in logdb to the specific server at hand. See note below too!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;userSessions.&lt;br&gt;enable&lt;/td&gt;
&lt;td&gt;Control whether user session data should be retrieved for this server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;userSessions.&lt;br&gt;host&lt;/td&gt;
&lt;td&gt;Host and port from which to retrieve user session data. Usually on the form servername.mydomain.net:4243&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;servers.&lt;br&gt;userSessions.&lt;br&gt;virtualProxies&lt;/td&gt;
&lt;td&gt;A list of key-value pairs. Use to specify for which virtual proxies on this server user session data should be retrieved.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;serverTags&lt;/td&gt;
&lt;td&gt;A list of key-value pairs. Use to provide more metadata for servers. Can then (among other things) be used to created more advanced Grafana dashboards.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;code&gt;Butler-SOS.serversToMonitor.servers.logDbHost&lt;/code&gt; property can be tricky to get right. Easiest way to get the correct value is to look in the Nodes section in the QMC. In the &lt;code&gt;Host name&lt;/code&gt; column you find the host names of the various nodes. &lt;code&gt;logDbHost&lt;/code&gt; should be set to the first part of each host name:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./logdb-host-name-1.png&#34; alt=&#34;Log db host name&#34; title=&#34;Getting the log db host name property from QMC&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Available Metrics</title>
      <link>https://butler-sos.ptarmiganlabs.com/docs/reference/available_metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://butler-sos.ptarmiganlabs.com/docs/reference/available_metrics/</guid>
      <description>
        
        
        
      </description>
    </item>
    
  </channel>
</rss>
